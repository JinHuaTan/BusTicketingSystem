/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BUSUI;

import BUSDOMAIN.*;
import BUSCONTROL.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author sooxl
 */
public class DriverSchedulingPanel extends javax.swing.JPanel {

    private Staff currentStaff;
    private MaintainTripControl tripControl = new MaintainTripControl();
    private MaintainStaffControl staffControl = new MaintainStaffControl();
    private MaintainDriverlistControl driverlistControl = new MaintainDriverlistControl();
    private Trip trp;
    private ArrayList<Trip> tripList;
    ArrayList<Driverlist> driverlist;

    public DriverSchedulingPanel(Counter ds, Staff cs) {
        currentStaff = cs;
        initComponents();
        tripList = tripControl.getAllRecord();
        driverlist = driverlistControl.getAllRecord();
        for (int i = 0; i < driverlist.size(); i++) {
            jcbReplaceDriver.addItem(driverlist.get(i).getDriid());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jtfSearchTripID = new javax.swing.JTextField();
        jlbSearchTripID = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jlbTripID = new javax.swing.JLabel();
        jlbDest = new javax.swing.JLabel();
        jlbSource = new javax.swing.JLabel();
        jlbDepartureDate = new javax.swing.JLabel();
        jlbArrivalDate = new javax.swing.JLabel();
        jlbCurrentDriver = new javax.swing.JLabel();
        jtfTripID = new javax.swing.JTextField();
        jtfDest = new javax.swing.JTextField();
        jtfSource = new javax.swing.JTextField();
        jtfDepartureDate = new javax.swing.JTextField();
        jtfArrivalDate = new javax.swing.JTextField();
        jlbReasonOfReplace = new javax.swing.JLabel();
        jtfCurrentDriver = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtfReasonOfReplace = new javax.swing.JTextArea();
        jlbReplaceDriver = new javax.swing.JLabel();
        jbtConfirm = new javax.swing.JButton();
        jbtCheckName1 = new javax.swing.JButton();
        jbtCheckName = new javax.swing.JButton();
        jcbReplaceDriver = new javax.swing.JComboBox();
        jlbSearch = new javax.swing.JLabel();

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Driver Scheduling", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 24), new java.awt.Color(0, 102, 102))); // NOI18N

        jtfSearchTripID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchTripIDActionPerformed(evt);
            }
        });
        jtfSearchTripID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSearchTripIDKeyTyped(evt);
            }
        });

        jlbSearchTripID.setText("Search by Trip ID:");

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        jlbTripID.setText("Trip ID :");

        jlbDest.setText("Destination :");

        jlbSource.setText("Source :");

        jlbDepartureDate.setText("Departure Date :");

        jlbArrivalDate.setText("Arrival Date:");

        jlbCurrentDriver.setText("Current Driver :");

        jtfTripID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfTripID.setEnabled(false);
        jtfTripID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTripIDActionPerformed(evt);
            }
        });

        jtfDest.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfDest.setEnabled(false);

        jtfSource.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfSource.setEnabled(false);

        jtfDepartureDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfDepartureDate.setEnabled(false);

        jtfArrivalDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfArrivalDate.setEnabled(false);

        jlbReasonOfReplace.setText("Reason of Replacement :");

        jtfCurrentDriver.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfCurrentDriver.setEnabled(false);

        jtfReasonOfReplace.setColumns(20);
        jtfReasonOfReplace.setRows(5);
        jtfReasonOfReplace.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfReasonOfReplaceKeyTyped(evt);
            }
        });
        jScrollPane7.setViewportView(jtfReasonOfReplace);

        jlbReplaceDriver.setText("Replace Driver :");

        jbtConfirm.setBackground(new java.awt.Color(192, 57, 43));
        jbtConfirm.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jbtConfirm.setForeground(new java.awt.Color(255, 255, 255));
        jbtConfirm.setText("Confirm");
        jbtConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtConfirmActionPerformed(evt);
            }
        });

        jbtCheckName1.setText("Check Name");
        jbtCheckName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCheckName1ActionPerformed(evt);
            }
        });

        jbtCheckName.setText("Check Name");
        jbtCheckName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCheckNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jlbTripID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfTripID, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlbDepartureDate)
                                    .addComponent(jlbArrivalDate)
                                    .addComponent(jlbDest)
                                    .addComponent(jlbSource))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfSource, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(jtfDest)
                                    .addComponent(jtfArrivalDate)
                                    .addComponent(jtfDepartureDate))))
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlbReplaceDriver)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbReplaceDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtCheckName))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                                        .addComponent(jlbCurrentDriver)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfCurrentDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jbtCheckName1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                                        .addComponent(jlbReasonOfReplace)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(254, 254, 254)))
                .addGap(24, 24, 24))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbTripID)
                    .addComponent(jlbCurrentDriver)
                    .addComponent(jtfTripID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCurrentDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtCheckName1))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbDest)
                            .addComponent(jtfDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbReasonOfReplace))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbSource)
                            .addComponent(jtfSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbDepartureDate)
                            .addComponent(jtfDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbArrivalDate)
                            .addComponent(jtfArrivalDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbReplaceDriver)
                            .addComponent(jbtCheckName)
                            .addComponent(jcbReplaceDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jbtConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        jlbSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlImages/search.png"))); // NOI18N
        jlbSearch.setToolTipText("Search");
        jlbSearch.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jlbSearchMouseMoved(evt);
            }
        });
        jlbSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(397, 397, 397)
                .addComponent(jlbSearchTripID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfSearchTripID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbSearch)
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlbSearchTripID)
                        .addComponent(jtfSearchTripID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(15, 15, 15)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSearchTripIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchTripIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSearchTripIDActionPerformed

    private void jtfSearchTripIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchTripIDKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetterOrDigit(c) && jtfSearchTripID.getText().length() < 6) {
            // OK

        } else {
            // Ignore this character
            evt.consume();
        }
    }//GEN-LAST:event_jtfSearchTripIDKeyTyped

    private void jtfTripIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTripIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTripIDActionPerformed

    private void jtfReasonOfReplaceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfReasonOfReplaceKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDefined(c) && jtfReasonOfReplace.getText().length() < 199) {
            // OK

        } else {
            // Ignore this character
            evt.consume();
        }
    }//GEN-LAST:event_jtfReasonOfReplaceKeyTyped

    private void jbtConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtConfirmActionPerformed
        Driverlist replacedriver = driverlistControl.selectRecord(jcbReplaceDriver.getSelectedItem() + "");
        int clashDriver = 0;
        for (int i = 0; i < tripList.size(); i++) {
            if (tripList.get(i).getDepartdate().substring(0, 9).equals(trp.getDepartdate().substring(0, 9))) {
                if (tripList.get(i).getDriverlistid().getDriid().equals(replacedriver.getDriid())) {
                    clashDriver = i;
                }
            }
        }

        if (replacedriver.getDriid().equals(jtfCurrentDriver.getText())) {
            JOptionPane.showMessageDialog(null, "Current Driver and Replace Driver is Same ", "Same Driver", JOptionPane.ERROR_MESSAGE);

        } else {
            if (clashDriver != 0) {
                JOptionPane.showMessageDialog(null, "This replace driver has been assign to another trip on " + tripList.get(clashDriver).getDepartdate() + ". From :" + tripList.get(clashDriver).getRouteid().getSourceid().getDestl() + " To :" + tripList.get(clashDriver).getRouteid().getDestid().getDestl() + ".", "Driver Time Clash", JOptionPane.ERROR_MESSAGE);
            } else {
                Driverlist currentdriver = driverlistControl.selectRecord(jtfCurrentDriver.getText());
                currentdriver.setDristatus("NOT");
                currentdriver.setDescofchange(jtfReasonOfReplace.getText());
                driverlistControl.updateRecord(currentdriver);
                trp.setDriverlistid(replacedriver);
                tripControl.updateRecord(trp);
                JOptionPane.showMessageDialog(null, "Driver is replaced successfully!!! ", "Update to Database Success", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_jbtConfirmActionPerformed

    private void jbtCheckName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCheckName1ActionPerformed
        Driverlist driver = driverlistControl.selectRecord(jtfCurrentDriver.getText());
        if (driver != null) {
            JOptionPane.showMessageDialog(null, "Name : " + driver.getDriverid().getStaffname(), "Driver's Name", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid Driver ID ", "STAFF NOT FOUND", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jbtCheckName1ActionPerformed

    private void jbtCheckNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCheckNameActionPerformed

        Driverlist driver = driverlistControl.selectRecord(jcbReplaceDriver.getSelectedItem() + "");
        if (driver != null) {
            JOptionPane.showMessageDialog(null, "Name : " + driver.getDriverid().getStaffname(), "Driver's Name", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid Driver ID ", "STAFF NOT FOUND", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jbtCheckNameActionPerformed

    private void jlbSearchMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbSearchMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jlbSearchMouseMoved

    private void jlbSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbSearchMouseClicked

        String id = jtfSearchTripID.getText();
        trp = tripControl.selectRecord(id);

        if (trp != null) {
            jtfTripID.setText(trp.getTripid());
            jtfDest.setText(trp.getRouteid().getDestid().getDestl());
            jtfSource.setText(trp.getRouteid().getSourceid().getDestl());
            jtfDepartureDate.setText(trp.getDepartdate());
            jtfArrivalDate.setText(trp.getArrivaldate());
            jtfCurrentDriver.setText(trp.getDriverlistid().getDriid());

        } else {
            JOptionPane.showMessageDialog(null, "Invalid Trip ID ", "TRIP NOT FOUND", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jlbSearchMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton jbtCheckName;
    private javax.swing.JButton jbtCheckName1;
    private javax.swing.JButton jbtConfirm;
    private javax.swing.JComboBox jcbReplaceDriver;
    private javax.swing.JLabel jlbArrivalDate;
    private javax.swing.JLabel jlbCurrentDriver;
    private javax.swing.JLabel jlbDepartureDate;
    private javax.swing.JLabel jlbDest;
    private javax.swing.JLabel jlbReasonOfReplace;
    private javax.swing.JLabel jlbReplaceDriver;
    private javax.swing.JLabel jlbSearch;
    private javax.swing.JLabel jlbSearchTripID;
    private javax.swing.JLabel jlbSource;
    private javax.swing.JLabel jlbTripID;
    private javax.swing.JTextField jtfArrivalDate;
    private javax.swing.JTextField jtfCurrentDriver;
    private javax.swing.JTextField jtfDepartureDate;
    private javax.swing.JTextField jtfDest;
    private javax.swing.JTextArea jtfReasonOfReplace;
    private javax.swing.JTextField jtfSearchTripID;
    private javax.swing.JTextField jtfSource;
    private javax.swing.JTextField jtfTripID;
    // End of variables declaration//GEN-END:variables
}
